---
ingress:
  enabled: false
  tls: true
  hostname: ""
  httpBasicAuth: ""
  services:
    - serviceName: fluentd
      servicePort: 9880
      path: /fluentd
    - serviceName: opensearch-dashboards
      servicePort: 5601
      path: /opensearch-dashboards


opensearch-dashboards:
  opensearchHosts: "https://opensearch-cluster-master:9200"
  rbac:
    create: false
  config:
    opensearch_dashboards.yml:
      server:
        name: opensearch-dashboards
        basePath: "/opensearch-dashboards"
        rewriteBasePath: true
        ssl:
          enabled: true
          certificate: /usr/share/opensearch-dashboards/config/custom/ssl/client.pem
          key: /usr/share/opensearch-dashboards/config/custom/ssl/client-key.pem
      opensearch:
        ssl:
          certificate: "/usr/share/opensearch-dashboards/config/custom/ssl/admin.pem"
          key: "/usr/share/opensearch-dashboards/config/custom/ssl/admin-key.pem"
          certificateAuthorities: /usr/share/opensearch-dashboards/config/custom/ssl/root-ca.pem
          verificationMode: none
        logQueries: true

  extraVolumes:
    - name: ssl-folder
      persistentVolumeClaim:
        claimName: monitoring-certs
  extraVolumeMounts:
    - name: ssl-folder
      mountPath: /usr/share/opensearch-dashboards/config/custom/ssl

opensearch:
  replicas: 1
  minimumMasterNodes: 1
  networkPolicy:
    create: false
  podSecurityPolicy:
    create: false
    spec:
      privileged: true
  persistence:
    enabled: true
    # Set to false to disable the `fsgroup-volume` initContainer that will update permissions on the persistent disk.
    enableInitChown: false
  resources:
    requests:
      cpu: "250m"
      memory: "100Mi"
    limits:
      cpu: "400m"
      memory: "1Gi"
  config:
    opensearch.yml: |
      cluster.name: opensearch-cluster
      # Bind to all interfaces because we don't know what IP address Docker will assign to us.
      network.host: 0.0.0.0
      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: /usr/share/opensearch/config/custom/ssl/admin.pem
              pemkey_filepath:  /usr/share/opensearch/config/custom/ssl/admin-key.pem
              pemtrustedcas_filepath: /usr/share/opensearch/config/custom/ssl/root-ca.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: /usr/share/opensearch/config/custom/ssl/admin.pem
              pemkey_filepath:  /usr/share/opensearch/config/custom/ssl/admin-key.pem
              pemtrustedcas_filepath: /usr/share/opensearch/config/custom/ssl/root-ca.pem
          authcz:
            admin_dn:
              - 'C=CMY,ST=DAIMLER,L=Lisbon,O=ORG,OU=UNIT,CN=ADMIN'
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]
  lifecycle:
    postStart:
      exec:
        command:
          - bash
          - -c
          - |
            #!/bin/bash
            # Add a template to adjust number of shards/replicas1
            TEMPLATE_NAME=cmy_logging
            INDEX_PATTERN="*"
            SHARD_COUNT=1
            REPLICA_COUNT=0
            ES_URL=http://localhost:9200
            #while [[ "$(curl -s -o /dev/null -w '%{http_code}\n' $ES_URL)" != "200" ]]; do sleep 1; done
            #curl --user admin:admin -XPUT "$ES_URL/_template/$TEMPLATE_NAME" -H 'Content-Type: application/json' -d'{"index_patterns":['\""$INDEX_PATTERN"\"'],"settings":{"number_of_shards":'$SHARD_COUNT',"number_of_replicas":'$REPLICA_COUNT'}}'
  extraInitContainers:
    - name: ssl-init
      image: nginx
      command: ["sh", "-c"]
      args:
        - openssl genrsa -out /tmp/ssl/root-ca-key.pem 2048;
          openssl req -new -x509 -key /tmp/ssl/root-ca-key.pem -subj "/C=CM/ST=DAIMLER/L=Lisbon/O=ORG/OU=UNIT/CN=ROOT" -out /tmp/ssl/root-ca.pem -days 730;
          openssl genrsa -out /tmp/ssl/admin-key-temp.pem 2048;
          openssl pkcs8 -inform PEM -outform PEM -in /tmp/ssl/admin-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out /tmp/ssl/admin-key.pem;
          openssl req -new -key /tmp/ssl/admin-key.pem -subj "/C=CM/ST=DAIMLER/O=Lisbon/O=ORG/OU=UNIT/CN=ADMIN" -out /tmp/ssl/admin.csr;
          openssl x509 -req -in /tmp/ssl/admin.csr -CA /tmp/ssl/root-ca.pem -CAkey /tmp/ssl/root-ca-key.pem -CAcreateserial -sha256 -out /tmp/ssl/admin.pem -days 730;
          openssl genrsa -out /tmp/ssl/client-key-temp.pem 2048;
          openssl pkcs8 -inform PEM -outform PEM -in /tmp/ssl/client-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out /tmp/ssl/client-key.pem;
          openssl req -new -key /tmp/ssl/client-key.pem -subj "/C=CM/ST=DAIMLER/O=Lisbon/O=ORG/OU=UNIT/CN=CLIENT" -out /tmp/ssl/client.csr;
          openssl x509 -req -in /tmp/ssl/client.csr -CA /tmp/ssl/root-ca.pem -CAkey /tmp/ssl/root-ca-key.pem -CAcreateserial -sha256 -out /tmp/ssl/client.pem -days 730;

          rm /tmp/ssl/admin-key-temp.pem;
          rm /tmp/ssl/admin.csr
      volumeMounts:
      - name: ssl-folder
        mountPath: /tmp/ssl
  extraVolumes:
    - name: ssl-folder
      persistentVolumeClaim:
        claimName: monitoring-certs
  extraVolumeMounts:
    - name: ssl-folder
      mountPath: /usr/share/opensearch/config/custom/ssl
fluentd:
  kind: "Deployment"
  rbac:
    create: false
  podSecurityPolicy:
    enabled: false
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  service:
    type: "ClusterIP"
    annotations: {}
    ports:
      - name: "forwarder"
        protocol: TCP
        containerPort: 24224
      - name: "loginput"
        protocol: TCP
        containerPort: 9880
      - name: "probeport"
        protocol: TCP
        containerPort: 9881
  dashboards:
    enabled: false
  autoscaling:
    enabled: false
  metrics:
    serviceMonitor:
      enabled: false
  livenessProbe:
    httpGet:
      path: /metrics
      port: metrics
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 2
  readinessProbe:
    httpGet:
      path: /metrics
      port: metrics
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 2
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000
  volumes:
    - name: etcfluentd-main
      configMap:
        name: fluentd-main
        defaultMode: 0777
    - name: etcfluentd-config
      configMap:
        name: fluentd-config
        defaultMode: 0777
  volumeMounts:
    - name: etcfluentd-main
      mountPath: /etc/fluent
    - name: etcfluentd-config
      mountPath: /etc/fluent/config.d/
  fileConfigs:
    01_sources.conf: |-
      <source>
        @type http
        port 9880
        bind 0.0.0.0
        body_size_limit 32m
        keepalive_timeout 10s
        @label @ELASTIC_INPUT
      </source>
      <source>
        @type http
        port 9881
        bind 0.0.0.0
      </source>
    02_filters.conf: |-
      <label @ELASTIC_INPUT>
        <match **>
          @type relabel
          @label @ELASTIC_DISPATCH
        </match>
      </label>
    03_dispatch.conf: |-
      <label @ELASTIC_DISPATCH>
        <match **>
          @type relabel
          @label @ELASTIC_OUTPUT
        </match>
      </label>

    04_outputs.conf: |-
      <label @ELASTIC_OUTPUT>
        <match **>
          @type elasticsearch
          scheme https
          host "opensearch-cluster-master"
          port 9200
          @log_level debug
          index_name fluentd-${tag}-%Y.%m.%d
          <buffer tag, time>
            timekey 1h # chunks per hours ("3600" also available)
          </buffer>
          user admin
          password admin
          ssl_verify false
          ssl_version TLSv1_2
          logstash_format false
          enable_ilm true
          flush_interval 10s
        </match>
      </label>
